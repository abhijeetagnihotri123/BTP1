<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="StringPalindrome"><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-4062da04" start="1614675824630" dump="1614675824873"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-a450b66f" start="1614676141653" dump="1614676141901"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-a9328604" start="1614676171145" dump="1614676171378"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-ff0ab201" start="1614754607345" dump="1614754607664"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-79678553" start="1614754668123" dump="1614754668406"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-18719d6b" start="1614754795372" dump="1614754795682"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-87b4397a" start="1614755020204" dump="1614755020486"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-c96cb05e" start="1614755053443" dump="1614755053720"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-f551c509" start="1614755763721" dump="1614755764024"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-776f8c45" start="1614756070719" dump="1614756070993"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-725c41f9" start="1614756279696" dump="1614756279974"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-c29bfde2" start="1614756755347" dump="1614756755682"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-8cdbc1cc" start="1614761449448" dump="1614761449916"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-ec422a18" start="1614761537368" dump="1614761537722"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-47dc895" start="1614761630176" dump="1614761630525"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-1ff2fe2f" start="1614761644106" dump="1614761644435"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-f08e22d6" start="1614761840372" dump="1614761840705"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-3c4299e3" start="1614791389531" dump="1614791389882"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-5f865e1b" start="1614837403142" dump="1614837403449"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-ccb053dd" start="1614837512989" dump="1614837513275"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-d1770c63" start="1614837820984" dump="1614837821297"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-7a25de78" start="1614839369023" dump="1614839369395"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-77e9e03e" start="1614850597949" dump="1614850598259"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-a3f93e20" start="1616051127083" dump="1616051127383"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-6fbf7373" start="1616051169708" dump="1616051169991"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-50029bc1" start="1616051193311" dump="1616051193586"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-e35e88f2" start="1616051240818" dump="1616051241086"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-13c70995" start="1616051260605" dump="1616051260866"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-7476d292" start="1616051273953" dump="1616051274254"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-522fb09b" start="1616054378638" dump="1616054379011"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-c8db7101" start="1616054403279" dump="1616054403662"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-9482ab69" start="1616054423685" dump="1616054424073"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-27a797fa" start="1616054672857" dump="1616054673221"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-608c6864" start="1616054820389" dump="1616054820753"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-2280b390" start="1616057608251" dump="1616057608634"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-39064f61" start="1616057937990" dump="1616057938306"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-31afea3f" start="1616057975962" dump="1616057976276"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-5aac3d54" start="1616058036357" dump="1616058036629"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-cca288d5" start="1616062750965" dump="1616062751294"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-70e52ddb" start="1616062781995" dump="1616062782326"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-364afad2" start="1616062820553" dump="1616062820832"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-566c2dfb" start="1616063172407" dump="1616063172809"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-54a4baa7" start="1616063456371" dump="1616063456718"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-777fee86" start="1616063947663" dump="1616063948114"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-3470237" start="1616064058490" dump="1616064058787"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-f191698c" start="1616064146829" dump="1616064147277"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-fac21011" start="1616133854413" dump="1616133854687"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-456b3639" start="1616135214547" dump="1616135214829"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-c9cfed69" start="1616420643448" dump="1616420643855"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-5469d737" start="1616433775113" dump="1616433775417"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-ea14bd8d" start="1616435561563" dump="1616435561859"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-59f5092" start="1616436086991" dump="1616436087415"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-df40ff1d" start="1616436367844" dump="1616436368137"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-b39de445" start="1616436792219" dump="1616436792517"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-b75e5c3f" start="1616436986423" dump="1616436986718"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-3707bbd3" start="1616476106192" dump="1616476106619"/><sessioninfo id="markfirmware-HP-Pavilion-Notebook-15-bc5xxx-2c722bb4" start="1616477260260" dump="1616477260562"/><package name="com/javatechie/StringPalindrome"><class name="com/javatechie/StringPalindrome/DECODE_INSTRUCTION" sourcefilename="DECODE_INSTRUCTION.java"><method name="&lt;init&gt;" desc="()V" line="2"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="OPCODE" desc="(Ljava/lang/String;)I" line="6"><counter type="INSTRUCTION" missed="3" covered="57"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="60"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/Beta_update" sourcefilename="Beta_update.java"><method name="&lt;init&gt;" desc="()V" line="2"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print_val" desc="([Ljava/lang/String;)I" line="5"><counter type="INSTRUCTION" missed="18" covered="129"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="14" covered="28"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="132"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="14" covered="29"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/I_CACHE" sourcefilename="I_CACHE.java"><method name="&lt;init&gt;" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="()I" line="32"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="find" desc="(Lcom/javatechie/StringPalindrome/INode;I[[Ljava/lang/String;)Lcom/javatechie/StringPalindrome/INode;" line="36"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I[[Ljava/lang/String;I)V" line="48"><counter type="INSTRUCTION" missed="80" covered="141"/><counter type="BRANCH" missed="10" covered="18"/><counter type="LINE" missed="26" covered="45"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cache_hit" desc="(Lcom/javatechie/StringPalindrome/INode;I[[Ljava/lang/String;I)Z" line="175"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="82" covered="201"/><counter type="BRANCH" missed="10" covered="26"/><counter type="LINE" missed="27" covered="59"/><counter type="COMPLEXITY" missed="9" covered="14"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/find_value" sourcefilename="find_value.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Display" desc="(Lcom/javatechie/StringPalindrome/Node;)V" line="18"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert_term" desc="(Lcom/javatechie/StringPalindrome/Node;IF)V" line="43"><counter type="INSTRUCTION" missed="25" covered="41"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse_expression" desc="(Lcom/javatechie/StringPalindrome/Node;Ljava/lang/String;)V" line="80"><counter type="INSTRUCTION" missed="5" covered="177"/><counter type="BRANCH" missed="9" covered="23"/><counter type="LINE" missed="2" covered="33"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find_power" desc="(FI)F" line="144"><counter type="INSTRUCTION" missed="10" covered="36"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="VALUE" desc="(Lcom/javatechie/StringPalindrome/Node;F)F" line="167"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FIND_VALUE" desc="(Lcom/javatechie/StringPalindrome/find_value;Ljava/lang/String;F)F" line="179"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="99" covered="299"/><counter type="BRANCH" missed="27" covered="37"/><counter type="LINE" missed="21" covered="67"/><counter type="COMPLEXITY" missed="21" covered="18"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/INTEGRATE" sourcefilename="INTEGRATE.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Display" desc="(Lcom/javatechie/StringPalindrome/Node;)Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="21" covered="57"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert_term" desc="(Lcom/javatechie/StringPalindrome/Node;IF)V" line="43"><counter type="INSTRUCTION" missed="49" covered="17"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="10" covered="6"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse_expression" desc="(Lcom/javatechie/StringPalindrome/Node;Ljava/lang/String;)V" line="80"><counter type="INSTRUCTION" missed="58" covered="124"/><counter type="BRANCH" missed="19" covered="13"/><counter type="LINE" missed="7" covered="28"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PRIMITIVE" desc="(Lcom/javatechie/StringPalindrome/Node;F)V" line="144"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Integrate" desc="(Lcom/javatechie/StringPalindrome/INTEGRATE;Ljava/lang/String;F)Ljava/lang/String;" line="157"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="129" covered="258"/><counter type="BRANCH" missed="33" covered="23"/><counter type="LINE" missed="20" covered="61"/><counter type="COMPLEXITY" missed="22" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/add_polynomials" sourcefilename="add_polynomials.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Display" desc="(Lcom/javatechie/StringPalindrome/Node;)Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="37" covered="41"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert_term" desc="(Lcom/javatechie/StringPalindrome/Node;IF)V" line="44"><counter type="INSTRUCTION" missed="18" covered="48"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse_expression" desc="(Lcom/javatechie/StringPalindrome/Node;Ljava/lang/String;)V" line="81"><counter type="INSTRUCTION" missed="58" covered="124"/><counter type="BRANCH" missed="19" covered="13"/><counter type="LINE" missed="7" covered="28"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ADD" desc="(Lcom/javatechie/StringPalindrome/add_polynomials;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="114" covered="237"/><counter type="BRANCH" missed="29" covered="25"/><counter type="LINE" missed="17" covered="55"/><counter type="COMPLEXITY" missed="22" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/TWOBIT_BRANCH_PREDICTOR" sourcefilename="TWOBIT_BRANCH_PREDICTOR.java"><method name="&lt;init&gt;" desc="(I)V" line="5"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict_state" desc="(C)I" line="17"><counter type="INSTRUCTION" missed="45" covered="23"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="15" covered="8"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="33"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="15" covered="12"/><counter type="COMPLEXITY" missed="10" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/App" sourcefilename="App.java"><method name="&lt;init&gt;" desc="()V" line="2"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TEST" desc="([Ljava/lang/String;)I" line="6"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/DNode" sourcefilename="D_CACHE.java"><method name="&lt;init&gt;" desc="(II[I)V" line="10"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/parse_assembly" sourcefilename="parse_assembly.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileName" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProgram" desc="()[[Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenised_instruction" desc="(Ljava/lang/String;)[Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="()V" line="36"><counter type="INSTRUCTION" missed="9" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="84"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="32"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/Node" sourcefilename="Node.java"><method name="&lt;init&gt;" desc="(FI)V" line="7"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/subtract_polynomial" sourcefilename="subtract_polynomial.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Display" desc="(Lcom/javatechie/StringPalindrome/Node;)Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="37" covered="41"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert_term" desc="(Lcom/javatechie/StringPalindrome/Node;IF)V" line="44"><counter type="INSTRUCTION" missed="18" covered="48"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract_power" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="53" covered="17"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Insert_term_aux" desc="(Lcom/javatechie/StringPalindrome/Node;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;CZ)V" line="104"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse_expression" desc="(Lcom/javatechie/StringPalindrome/Node;Ljava/lang/String;Z)V" line="113"><counter type="INSTRUCTION" missed="3" covered="104"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SUB" desc="(Lcom/javatechie/StringPalindrome/subtract_polynomial;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="156"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="114" covered="264"/><counter type="BRANCH" missed="29" covered="27"/><counter type="LINE" missed="17" covered="61"/><counter type="COMPLEXITY" missed="22" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/DERIVATIVE" sourcefilename="DERIVATIVE.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Display" desc="(Lcom/javatechie/StringPalindrome/Node;)Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="37" covered="41"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert_term" desc="(Lcom/javatechie/StringPalindrome/Node;IF)V" line="44"><counter type="INSTRUCTION" missed="49" covered="17"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="10" covered="6"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse_expression" desc="(Lcom/javatechie/StringPalindrome/Node;Ljava/lang/String;)V" line="81"><counter type="INSTRUCTION" missed="58" covered="124"/><counter type="BRANCH" missed="19" covered="13"/><counter type="LINE" missed="7" covered="28"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Differentialte" desc="(Lcom/javatechie/StringPalindrome/Node;)V" line="145"><counter type="INSTRUCTION" missed="15" covered="29"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="differentiate" desc="(Lcom/javatechie/StringPalindrome/DERIVATIVE;Ljava/lang/String;)Ljava/lang/String;" line="167"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="160" covered="234"/><counter type="BRANCH" missed="37" covered="23"/><counter type="LINE" missed="28" covered="58"/><counter type="COMPLEXITY" missed="25" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/INode" sourcefilename="I_CACHE.java"><method name="&lt;init&gt;" desc="(II[[Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/EXECUTE_INSTRUCTION" sourcefilename="EXECUTE_INSTRUCTION.java"><method name="&lt;init&gt;" desc="()V" line="4"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract_number" desc="(Ljava/lang/String;)I" line="8"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MOV" desc="([Ljava/lang/String;[[I)V" line="20"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ADD" desc="([Ljava/lang/String;[[I)V" line="26"><counter type="INSTRUCTION" missed="5" covered="57"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SUB" desc="([Ljava/lang/String;[[I)V" line="50"><counter type="INSTRUCTION" missed="17" covered="45"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CMP" desc="([Ljava/lang/String;[[I)Z" line="74"><counter type="INSTRUCTION" missed="12" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LDR" desc="([Ljava/lang/String;[[I)Z" line="90"><counter type="INSTRUCTION" missed="5" covered="105"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="STR" desc="([Ljava/lang/String;[[I)Z" line="120"><counter type="INSTRUCTION" missed="5" covered="118"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EXECUTE" desc="([Ljava/lang/String;[[II)V" line="159"><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="435"/><counter type="BRANCH" missed="10" covered="32"/><counter type="LINE" missed="12" covered="87"/><counter type="COMPLEXITY" missed="10" covered="21"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/test_application" sourcefilename="test_application.java"><method name="&lt;init&gt;" desc="()V" line="4"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="([Ljava/lang/String;)I" line="8"><counter type="INSTRUCTION" missed="45" covered="48"/><counter type="BRANCH" missed="8" covered="5"/><counter type="LINE" missed="13" covered="15"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="51"/><counter type="BRANCH" missed="8" covered="5"/><counter type="LINE" missed="13" covered="16"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/main_controller" sourcefilename="main_controller.java"><method name="&lt;init&gt;" desc="(Z)V" line="9"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max_register_number" desc="(Ljava/lang/String;)I" line="14"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/lang/String;)I" line="26"><counter type="INSTRUCTION" missed="165" covered="524"/><counter type="BRANCH" missed="32" covered="52"/><counter type="LINE" missed="27" covered="92"/><counter type="COMPLEXITY" missed="22" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="165" covered="559"/><counter type="BRANCH" missed="32" covered="54"/><counter type="LINE" missed="27" covered="102"/><counter type="COMPLEXITY" missed="22" covered="24"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/D_CACHE" sourcefilename="D_CACHE.java"><method name="&lt;init&gt;" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="()I" line="31"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="find" desc="(Lcom/javatechie/StringPalindrome/DNode;I[I)Lcom/javatechie/StringPalindrome/DNode;" line="35"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I[II)V" line="47"><counter type="INSTRUCTION" missed="94" covered="115"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="32" covered="33"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cache_hit" desc="(Lcom/javatechie/StringPalindrome/DNode;I[II)Z" line="162"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="96" covered="176"/><counter type="BRANCH" missed="9" covered="23"/><counter type="LINE" missed="33" covered="46"/><counter type="COMPLEXITY" missed="8" covered="13"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/CNode" sourcefilename="CNode.java"><method name="&lt;init&gt;" desc="(II[[Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/javatechie/StringPalindrome/multiply_polynomial" sourcefilename="multiply_polynomial.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Display" desc="(Lcom/javatechie/StringPalindrome/Node;)Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="37" covered="41"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert_term" desc="(Lcom/javatechie/StringPalindrome/Node;IF)V" line="44"><counter type="INSTRUCTION" missed="49" covered="17"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="10" covered="6"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse_expression" desc="(Lcom/javatechie/StringPalindrome/Node;Ljava/lang/String;Z)V" line="81"><counter type="INSTRUCTION" missed="61" covered="128"/><counter type="BRANCH" missed="20" covered="14"/><counter type="LINE" missed="7" covered="29"/><counter type="COMPLEXITY" missed="14" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcom/javatechie/StringPalindrome/multiply_polynomial;Lcom/javatechie/StringPalindrome/multiply_polynomial;)Lcom/javatechie/StringPalindrome/multiply_polynomial;" line="146"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="MULTUPLY" desc="(Lcom/javatechie/StringPalindrome/multiply_polynomial;Lcom/javatechie/StringPalindrome/multiply_polynomial;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="163"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="148" covered="257"/><counter type="BRANCH" missed="36" covered="24"/><counter type="LINE" missed="22" covered="63"/><counter type="COMPLEXITY" missed="24" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="test_application.java"><line nr="4" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="5" mb="0" cb="0"/><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="1" cb="2"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="2"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="2" ci="3" mb="3" cb="1"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="2" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="2" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="13" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="51"/><counter type="BRANCH" missed="8" covered="5"/><counter type="LINE" missed="13" covered="16"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="INTEGRATE.java"><line nr="5" mi="0" ci="2" mb="0" cb="0"/><line nr="8" mi="0" ci="7" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="1" cb="1"/><line nr="20" mi="9" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="2"/><line nr="24" mi="3" ci="9" mb="1" cb="1"/><line nr="25" mi="0" ci="14" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="6" mb="1" cb="1"/><line nr="30" mi="0" ci="10" mb="0" cb="0"/><line nr="34" mi="9" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="1" cb="1"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="4" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="4" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="2" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="2" cb="2"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="2"/><line nr="98" mi="0" ci="10" mb="1" cb="3"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="14" ci="7" mb="5" cb="1"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="21" ci="0" mb="6" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="0" ci="5" mb="0" cb="2"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="1" cb="1"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="125" mi="11" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="2" ci="6" mb="1" cb="1"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="129" covered="258"/><counter type="BRANCH" missed="33" covered="23"/><counter type="LINE" missed="20" covered="61"/><counter type="COMPLEXITY" missed="22" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DERIVATIVE.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="7" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="1" cb="1"/><line nr="21" mi="9" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="2"/><line nr="25" mi="3" ci="9" mb="1" cb="1"/><line nr="26" mi="0" ci="14" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="1" cb="1"/><line nr="29" mi="6" ci="0" mb="2" cb="0"/><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="35" mi="9" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="4" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="4" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="2" cb="2"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="10" mb="1" cb="3"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="14" ci="7" mb="5" cb="1"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="21" ci="0" mb="6" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="2" ci="6" mb="1" cb="1"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="1" cb="1"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="2"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="160" covered="234"/><counter type="BRANCH" missed="37" covered="23"/><counter type="LINE" missed="28" covered="58"/><counter type="COMPLEXITY" missed="25" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="add_polynomials.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="7" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="1" cb="1"/><line nr="21" mi="9" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="2"/><line nr="25" mi="3" ci="9" mb="1" cb="1"/><line nr="26" mi="0" ci="14" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="1" cb="1"/><line nr="29" mi="6" ci="0" mb="2" cb="0"/><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="35" mi="9" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="2" cb="2"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="2" cb="2"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="1" cb="1"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="2" cb="2"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="10" mb="1" cb="3"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="14" ci="7" mb="5" cb="1"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="21" ci="0" mb="6" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="2" ci="6" mb="1" cb="1"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="237"/><counter type="BRANCH" missed="29" covered="25"/><counter type="LINE" missed="17" covered="55"/><counter type="COMPLEXITY" missed="22" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DECODE_INSTRUCTION.java"><line nr="2" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="0" ci="4" mb="0" cb="2"/><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="4" mb="0" cb="2"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="2"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="2"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="2"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="2"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="2"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="1" cb="1"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="60"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CNode.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Beta_update.java"><line nr="2" mi="0" ci="3" mb="0" cb="0"/><line nr="5" mi="0" ci="2" mb="1" cb="1"/><line nr="7" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="1" cb="5"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="13" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="13" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="14" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="132"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="14" covered="29"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="main_controller.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="2"/><line nr="19" mi="0" ci="11" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="1" cb="1"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="16" mb="0" cb="2"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="16" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="2"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="2"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="2"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="18" mb="0" cb="2"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="10" mb="0" cb="2"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="9" mb="0" cb="0"/><line nr="108" mi="0" ci="12" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="3" ci="2" mb="3" cb="1"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="12" mb="0" cb="2"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="16" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="2" cb="2"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="2" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="4" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="12" ci="0" mb="2" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="16" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="4" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="2"/><line nr="195" mi="0" ci="9" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="15" mb="1" cb="1"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="12" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="1" cb="1"/><line nr="210" mi="15" ci="0" mb="2" cb="0"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="3" mb="3" cb="1"/><line nr="223" mi="0" ci="30" mb="2" cb="2"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="2"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="2"/><line nr="248" mi="0" ci="9" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="15" mb="1" cb="1"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="12" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="1" cb="1"/><line nr="263" mi="15" ci="0" mb="2" cb="0"/><line nr="265" mi="7" ci="0" mb="0" cb="0"/><line nr="269" mi="4" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="2"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="9" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="165" covered="559"/><counter type="BRANCH" missed="32" covered="54"/><counter type="LINE" missed="27" covered="102"/><counter type="COMPLEXITY" missed="22" covered="24"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="I_CACHE.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="12" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="2"/><line nr="38" mi="0" ci="8" mb="0" cb="4"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="2"/><line nr="51" mi="0" ci="3" mb="1" cb="1"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="1" cb="1"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="1" cb="1"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="1" cb="1"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="2" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="2"/><counter type="INSTRUCTION" missed="82" covered="219"/><counter type="BRANCH" missed="10" covered="26"/><counter type="LINE" missed="27" covered="65"/><counter type="COMPLEXITY" missed="9" covered="15"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TWOBIT_BRANCH_PREDICTOR.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="5" mi="0" ci="2" mb="0" cb="0"/><line nr="6" mi="0" ci="4" mb="0" cb="0"/><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="2"/><line nr="19" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="3" mb="1" cb="1"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="1" cb="1"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="2" cb="0"/><line nr="49" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="3" ci="0" mb="2" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="33"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="15" covered="12"/><counter type="COMPLEXITY" missed="10" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="subtract_polynomial.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="7" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="1" cb="1"/><line nr="21" mi="9" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="2"/><line nr="25" mi="3" ci="9" mb="1" cb="1"/><line nr="26" mi="0" ci="14" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="1" cb="1"/><line nr="29" mi="6" ci="0" mb="2" cb="0"/><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="35" mi="9" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="2" cb="2"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="2" cb="2"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="1" cb="1"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="14" ci="7" mb="5" cb="1"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="21" ci="0" mb="6" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="1" cb="1"/><line nr="92" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="11" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="2" ci="6" mb="1" cb="1"/><line nr="106" mi="0" ci="7" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="2" cb="2"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="2"/><line nr="129" mi="0" ci="10" mb="1" cb="3"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="0" ci="5" mb="0" cb="2"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="11" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="264"/><counter type="BRANCH" missed="29" covered="27"/><counter type="LINE" missed="17" covered="61"/><counter type="COMPLEXITY" missed="22" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="D_CACHE.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="12" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="2"/><line nr="37" mi="0" ci="13" mb="1" cb="5"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="2"/><line nr="50" mi="0" ci="5" mb="1" cb="1"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="1" cb="1"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="2"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="2"/><counter type="INSTRUCTION" missed="96" covered="194"/><counter type="BRANCH" missed="9" covered="23"/><counter type="LINE" missed="33" covered="53"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="EXECUTE_INSTRUCTION.java"><line nr="4" mi="0" ci="3" mb="0" cb="0"/><line nr="5" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="5" mb="0" cb="2"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="1" cb="1"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="1" cb="1"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="1" cb="1"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="1" cb="1"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="1" cb="1"/><line nr="101" mi="0" ci="7" mb="0" cb="2"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="13" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="2"/><line nr="110" mi="0" ci="13" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="16" mb="0" cb="0"/><line nr="115" mi="0" ci="15" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="1" cb="1"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="1" cb="1"/><line nr="139" mi="0" ci="7" mb="0" cb="2"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="13" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="10" mb="0" cb="2"/><line nr="148" mi="0" ci="13" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="12" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="435"/><counter type="BRANCH" missed="10" covered="32"/><counter type="LINE" missed="12" covered="87"/><counter type="COMPLEXITY" missed="10" covered="21"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="App.java"><line nr="2" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="0" ci="4" mb="0" cb="0"/><line nr="7" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Node.java"><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="find_value.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="7" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="2" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="2" cb="0"/><line nr="24" mi="12" ci="0" mb="2" cb="0"/><line nr="25" mi="13" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="28" mi="6" ci="0" mb="2" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="1" cb="3"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="5" ci="3" mb="3" cb="1"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="2" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="2" cb="2"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="2"/><line nr="98" mi="0" ci="10" mb="1" cb="3"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="21" mb="2" cb="4"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="21" mb="2" cb="4"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="0" ci="5" mb="0" cb="2"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="11" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="2" ci="6" mb="1" cb="1"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="1" cb="3"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="1" cb="1"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="10" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="2"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="299"/><counter type="BRANCH" missed="27" covered="37"/><counter type="LINE" missed="21" covered="67"/><counter type="COMPLEXITY" missed="21" covered="18"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="parse_assembly.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="84"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="32"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="multiply_polynomial.java"><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="7" mb="0" cb="0"/><line nr="11" mi="1" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="1" cb="1"/><line nr="21" mi="9" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="2"/><line nr="25" mi="3" ci="9" mb="1" cb="1"/><line nr="26" mi="0" ci="14" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="1" cb="1"/><line nr="29" mi="6" ci="0" mb="2" cb="0"/><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="35" mi="9" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="4" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="4" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="2" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="2" cb="2"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="10" mb="1" cb="3"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="14" ci="7" mb="5" cb="1"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="21" ci="0" mb="6" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="2" ci="6" mb="1" cb="1"/><line nr="132" mi="3" ci="4" mb="1" cb="1"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="11" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="2"/><line nr="154" mi="0" ci="13" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="148" covered="257"/><counter type="BRANCH" missed="36" covered="24"/><counter type="LINE" missed="22" covered="63"/><counter type="COMPLEXITY" missed="24" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1281" covered="3358"/><counter type="BRANCH" missed="280" covered="331"/><counter type="LINE" missed="271" covered="794"/><counter type="COMPLEXITY" missed="203" covered="185"/><counter type="METHOD" missed="3" covered="77"/><counter type="CLASS" missed="0" covered="20"/></package><counter type="INSTRUCTION" missed="1281" covered="3358"/><counter type="BRANCH" missed="280" covered="331"/><counter type="LINE" missed="271" covered="794"/><counter type="COMPLEXITY" missed="203" covered="185"/><counter type="METHOD" missed="3" covered="77"/><counter type="CLASS" missed="0" covered="20"/></report>